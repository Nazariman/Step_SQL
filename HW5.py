import json
from sqlalchemy import create_engine, Column, Integer, String, Date, func
from sqlalchemy.orm import declarative_base, sessionmaker
from datetime import datetime

# üì• –ó—á–∏—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–Ω—É —ñ –ø–∞—Ä–æ–ª—è –∑ config.json
with open('config.json', 'r') as file:
    data = json.load(file)
    login = data['login']
    password = data['password']

# üîå –°—Ç–≤–æ—Ä–µ–Ω–Ω—è engine –¥–ª—è SQLAlchemy
engine = create_engine(f"postgresql+pg8000://{login}:{password}@localhost:5432/people", echo=False)
Session = sessionmaker(bind=engine)
session = Session()

Base = declarative_base()

# üìã –ú–æ–¥–µ–ª—å —Ç–∞–±–ª–∏—Ü—ñ
class Person(Base):
    __tablename__ = 'people'
    id = Column(Integer, primary_key=True)
    name = Column(String)
    birth_date = Column(Date)
    country = Column(String)

# ‚ö†Ô∏è –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é, —è–∫—â–æ —â–µ –Ω–µ —ñ—Å–Ω—É—î
Base.metadata.create_all(engine)

# ‚ûï –î–æ–¥–∞—Ç–∏ –ª—é–¥–∏–Ω—É
def add_person(name, birth_date_str, country):
    birth_date = datetime.strptime(birth_date_str, "%Y-%m-%d").date()
    person = Person(name=name, birth_date=birth_date, country=country)
    session.add(person)
    session.commit()

# üî§ –Ü–º–µ–Ω–∞ –∑ –ø–µ–≤–Ω–æ—ó –ª—ñ—Ç–µ—Ä–∏
def get_people_by_letter(letter):
    return session.query(Person).filter(func.lower(Person.name).like(letter.lower() + "%")).all()

# üìÖ –ù–∞—Ä–æ–¥–∂–µ–Ω—ñ –ø—ñ—Å–ª—è –¥–∞—Ç–∏
def get_people_born_after(date_str):
    dt = datetime.strptime(date_str, "%Y-%m-%d").date()
    return session.query(Person).filter(Person.birth_date > dt).all()

# üåç –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π —É –∫—Ä–∞—ó–Ω—ñ
def count_people_in_country(country):
    return session.query(func.count()).filter(func.lower(Person.country) == country.lower()).scalar()

# üß™ –ú–µ–Ω—é
if __name__ == "__main__":
    while True:
        print("\n1. –î–æ–¥–∞—Ç–∏")
        print("2. –ü–æ—à—É–∫ –ø–æ –ª—ñ—Ç–µ—Ä—ñ")
        print("3. –ü—ñ—Å–ª—è –¥–∞—Ç–∏")
        print("4. –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –ø–æ –∫—Ä–∞—ó–Ω—ñ")
        print("0. –í–∏—Ö—ñ–¥")

        choice = input("–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ")

        if choice == "1":
            n = input("–Ü–º'—è: ")
            b = input("–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (YYYY-MM-DD): ")
            c = input("–ö—Ä–∞—ó–Ω–∞: ")
            add_person(n, b, c)
            print("‚úÖ –î–æ–¥–∞–Ω–æ")

        elif choice == "2":
            l = input("–õ—ñ—Ç–µ—Ä–∞: ")
            results = get_people_by_letter(l)
            for r in results:
                print(r.name, r.birth_date, r.country)

        elif choice == "3":
            d = input("–î–∞—Ç–∞ (YYYY-MM-DD): ")
            results = get_people_born_after(d)
            for r in results:
                print(r.name, r.birth_date, r.country)

        elif choice == "4":
            c = input("–ö—Ä–∞—ó–Ω–∞: ")
            print(f"üî¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å: {count_people_in_country(c)}")

        elif choice == "0":
            break

        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä.")
